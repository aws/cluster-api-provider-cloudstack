---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    pods:
      cidrBlocks: 
        - 192.168.0.0/16
    serviceDomain: "cluster.local"
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
    kind: CloudStackCluster
    name: ${CLUSTER_NAME}
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: ${CLUSTER_NAME}-control-plane
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: CloudStackCluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  controlPlaneEndpoint:
    host: ${CLUSTER_ENDPOINT_IP}
    port: 6443
  failureDomains:
  - name: ${CLOUDSTACK_FD1_NAME}
    acsendpoint:
      name: ${CLOUDSTACK_FD1_SECRET_NAME}
      namespace: ${CLOUDSTACK_FD1_SECRET_NAMESPACE}
    zone:
      name: ${CLOUDSTACK_ZONE1_NAME}
      network:
        name: ${CLOUDSTACK_SHARED_NETWORK1_NAME}
  - name: ${CLOUDSTACK_FD2_NAME}
    acsendpoint:
      name: ${CLOUDSTACK_FD2_SECRET_NAME}
      namespace: ${CLOUDSTACK_FD2_SECRET_NAMESPACE}
    zone:
      name: ${CLOUDSTACK_ZONE2_NAME}
      network:
        name: ${CLOUDSTACK_SHARED_NETWORK2_NAME}
    account: ${CLOUDSTACK_SUBDOMAIN_ACCOUNT_NAME}
    domain: ${CLOUDSTACK_SUBDOMAIN_PATH}
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        name: '{{ local_hostname }}'
        kubeletExtraArgs:
          provider-id: "cloudstack:///'{{ ds.meta_data.instance_id }}'"
    clusterConfiguration:
      imageRepository: k8s.gcr.io
    joinConfiguration:
      nodeRegistration:
        name: '{{ local_hostname }}'
        kubeletExtraArgs:
          provider-id: "cloudstack:///'{{ ds.meta_data.instance_id }}'"
        ignorePreflightErrors:
          - DirAvailable--etc-kubernetes-manifests
    preKubeadmCommands:
      - swapoff -a
    files:
      - content: |
          apiVersion: v1
          kind: Pod
          metadata:
            creationTimestamp: null
            name: kube-vip
            namespace: kube-system
          spec:
            containers:
            - args:
              - start
              env:
              - name: vip_arp
                value: "true"
              - name: vip_leaderelection
                value: "true"
              - name: vip_address
                value: ${CLUSTER_ENDPOINT_IP}
              - name: vip_interface
                value: ens3
              - name: vip_leaseduration
                value: "15"
              - name: vip_renewdeadline
                value: "10"
              - name: vip_retryperiod
                value: "2"
              image: public.ecr.aws/i3w0y7q3/plunder-app/kube-vip:v0.3.7-eks-a-v0.0.0-dev-build.0
              imagePullPolicy: IfNotPresent
              name: kube-vip
              resources: {}
              securityContext:
                capabilities:
                  add:
                  - NET_ADMIN
                  - SYS_TIME
              volumeMounts:
              - mountPath: /etc/kubernetes/admin.conf
                name: kubeconfig
            hostNetwork: true
            volumes:
            - hostPath:
                path: /etc/kubernetes/admin.conf
                type: FileOrCreate
              name: kubeconfig
          status: {}
        owner: root:root
        path: /etc/kubernetes/manifests/kube-vip.yaml
    diskSetup:
      filesystems:
        - device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}1
          overwrite: false
          extraOpts:
            - -E
            - lazy_itable_init=1,lazy_journal_init=1
          filesystem: ${CLOUDSTACK_DISK_OFFERING_FILESYSTEM}
          label: data_disk
      partitions:
        - device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}
          layout: true
          overwrite: false
          tableType: gpt
    mounts:
      - - LABEL=${CLOUDSTACK_DISK_OFFERING_LABEL}
        - ${CLOUDSTACK_DISK_OFFERING_MOUNT_PATH}
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
      kind: CloudStackMachineTemplate
      name: ${CLUSTER_NAME}-control-plane
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
---
