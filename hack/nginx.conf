# Copyright 2022.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This NGINX conf is meant to emulate an external load balancer used on a shared network.
# This is to test that CAPC works properly when building with Control Plane endpoints behind an external FQDN LB.
# Use this via:
#  docker run --name nginx-container --rm -p 6443:6443 -v $(pwd)/hack/nginx.conf:/etc/nginx/nginx.conf nginx
user  nginx;

events {
    worker_connections  1024;
}

# This section is probably not even necessary, but can be useful for demo/testing LB purposes.
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # For demo purposes, fire up as many demo NGINX apps as desired via:
    # Use via `docker run -P -d nginxdemos/hello` and then `docker ps` will list the ports in use. 
    # Then add their addresses and ports as below.
    # upstream nginxexample {
    #     server <server address>:<port> max_fails=3 fail_timeout=10s;
    # }
    # server {
    #     location / {
    #     proxy_pass http://nginxexample;
    # }}
}

# TCP LB and SSL passthrough.
# Add as many IPs as desired.
stream {
    upstream kubeendpoints {

        # The following is the format for adding a kubernetes upstream endpoint.
        # server <server1 IP>:6443 max_fails=3 fail_timeout=10s;
        # server <server2 IP>:6443 max_fails=3 fail_timeout=10s;
    }

    server {
        listen 6443;
        proxy_pass kubeendpoints;
    }
}

# Note:
#   Mac firewalls can be temporarily disabled via `watch pfctl -d`.i
#   This is required if load balancing from a Mac with the default packet filter enabled.
#   For other OSs verify the firewall is not blocking desired ports.
